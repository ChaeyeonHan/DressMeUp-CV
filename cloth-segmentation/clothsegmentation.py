# -*- coding: utf-8 -*-
"""clothsegmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/181LT1Ijk1Oyq2nLmn6xM6EW276JvIr6v
"""

# 실행해야함
# !pip install -r requirements.txt

import subprocess


def run_commands(image_path):
    # process.py 실행
    process_command = f"python process.py --image \"{image_path}\""
    subprocess.run(process_command, shell=True)
    print("run_commands - process.py 실행")
    # app.py 실행
    # app_command = "python app.py"
    # subprocess.run(app_command, shell=True)
    print("run_commands - python app.py 실행")


# 함수 실행
# image_path = "/content/drive/MyDrive/dressmeup/cloth-segmentation/input/반바지1.jpg"
# run_commands(image_path)



import cv2


def check_colors_in_image_cv(image_path):
    print("check_colors_in_image_cv")

    img_rgb = cv2.imread(image_path)

    # Define color ranges
    red_lower = (0, 0, 100)
    red_upper = (100, 100, 255)

    green_lower = (0, 100, 0)
    green_upper = (100, 255, 100)

    cyan_lower = (0, 100, 100)
    cyan_upper = (255, 150, 150)

    # Create masks
    red_mask = cv2.inRange(img_rgb, red_lower, red_upper)
    green_mask = cv2.inRange(img_rgb, green_lower, green_upper)
    cyan_mask = cv2.inRange(img_rgb, cyan_lower, cyan_upper)

    # Check if colors are found
    red_found = cv2.countNonZero(red_mask) > 0
    green_found = cv2.countNonZero(green_mask) > 0
    cyan_found = cv2.countNonZero(cyan_mask) > 0

    # Determine the type of clothing
    if red_found:
        a = "top"
    elif cyan_found:
        a = "dress,skirt"
    else:
        a = "bottom"

    return a

# # Example usage
# image_path = "/content/drive/MyDrive/dressmeup/cloth-segmentation/output/cloth_seg/final_seg.png"
# result = check_colors_in_image_cv(image_path)
# #print(result)